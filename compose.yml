version: '3'
services:
  # -- DBサーバ ---------------------------------------------
  db:
    # mysqlのイメージの設定
    image: mysql:8.0
    # mysql8.0から認証形式が変わっていてその認証形式に関する設定
    command: --default-authentication-plugin=mysql_native_password
    # 「./src/db/mysql_data」ローカルディレクトリを「/var/lib/mysql」と同期する
    # 通常コンテナを作り直すとデータ消えてしまうが、以下を設定することでコンテナを作り直してもそのデータを保持することができる
    volumes:
      - ./src/db/mysql_data:/var/lib/mysql
    # 環境変数の設定
    environment:
      MYSQL_ROOT_PASSWORD: password

  # -- WEBサーバ --------------------------------------------
  web:
    # 同じディレクトリ配下のDockerfileを参照するといった意味合い
    build: .
    # railsのサーバーを起動するコマンドを実行
    # ポート番号：3000
    # バインドするIPアドレス：0.0.0.0 => バインドするIPアドレスをなんでも受け付ける
    command: bundle exec rails s -p 3000 -b '0.0.0.0'
    # 「./src」でソースの編集があった場合に「/app」と同期をとる
    # ローカルファイルを更新したらdockerのファイルも自動的に更新する
    volumes:
      - ./src:/app
    # ポート指定
    ports:
      - "3000:3000"
    # 通常rails側からmysqlに接続しようと思ったらmysqlの接続先IPアドレスを直接指定しないといけないが、composeだとdbのみで接続できる
    depends_on:
      - db

# databaseのパスワードとlocalhostを設定する必要があるかも？
# database.ymlをvscodeで編集するために権限の設定が必要 => https://qiita.com/kazuhito_nakayama/items/3a49c9f3bd5c766d6134

# アプリケーションのひな形をインストール
# docker compose run web rails new . --force --database=mysql
# --database=mysql：rails上でmysqlを使用することができるようにする => https://www.sejuku.net/blog/28403
# ファイルを削除(全て削除してやり直したいとき) => https://benzenetarou.hatenablog.com/entry/sudo_rm


